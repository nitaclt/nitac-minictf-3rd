c = 54824639298391376755026467308714291359262294793036133791220357610709439063299375616586034773118457824984258016529054434262431425730126094459939617002704781437423764779537446372419486106534889681361292972850636399356061972348915381731466615819006733225844633317451355239574062603892227674028869485742057224659
n = 119373707746003398968050893961443417364394824723759068858955243068986546134208874687564785379251256013857566962539760673690977797086359460976673054638616431114121854656322391660470789496268580084150434875798956745806859500242537865804199576495969512866376003815094580443011485001231787505484680120104234427717
r2 = 6205365790736677585062437525900518460670717278435160523717212712674574509659597111232308409435132474822972013082967991312588722579430915764013021798285278613410604743669103483390010482991694580593568432124515154735240686197920497340416655992592761981630754076548585425594817318139602052031398283879489708176
r2 += n * 2
e = 0x10001

p_1 = (r2 - sqrt(r2^2 - 4*n^2)) / 2
p_2 = (r2 + sqrt(r2^2 - 4*n^2)) / 2
if p_1.is_square():
    p = sqrt(p_1)
elif p_2.is_square():
    p = sqrt(p_2)
else:
    print("`p` not found")

q = n / p
phi = (p - 1) * (q - 1)
d = inverse_mod(e, phi)

m = power_mod(c, d, n)
print(m.hex().decode("hex"))
